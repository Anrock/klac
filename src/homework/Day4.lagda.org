#+begin_src agda2

{-# OPTIONS --guardedness #-}
module homework.Day4 where

open import Prelude
open import Day4

open import Data.Bool using (false; true) renaming (Bool to ùîπ; _‚àß_ to _&&_; _‚à®_ to _||_)
open import Data.List using (List; []; _‚à∑_)
open import Data.Nat using (‚Ñï; zero; suc; _+_)
open import Relation.Nullary using (Reflects; yes; no)

#+end_src

* –ó–∞–¥–∞—á–∞ 1 (‚ãÜ‚ãÜ)
–ü–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ ~reNotEmpty re~ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ /–æ—Ç—Ä–∞–∂–∞–µ—Ç/ —Å–∏—Ç—É–∞—Ü–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª—é–±–∞—è —Å—Ç—Ä–æ–∫–∞, –º–∞—Ç—á–∞—â–∞—è—Å—è
—Ä–µ–≥—É–ª—è—Ä–∫–æ–π ~re~.
TODO

#+begin_src agda2

reNotEmpty : {A : Type ‚Ñì} ‚Üí RegExp A ‚Üí ùîπ
reNotEmpty √∏ = false
reNotEmpty Œµ = true
reNotEmpty (# _) = true
reNotEmpty (re‚ÇÅ ‚àô re‚ÇÇ) = reNotEmpty re‚ÇÅ && reNotEmpty re‚ÇÇ
reNotEmpty (re‚ÇÅ ‚à£ re‚ÇÇ) = reNotEmpty re‚ÇÅ || reNotEmpty re‚ÇÇ
reNotEmpty (_ +) = true

reNE-correct : {A : Type ‚Ñì} {s : List A} {re : RegExp A} ‚Üí
               Reflects (s =~ re) (reNotEmpty re)
reNE-correct = {!!}

#+end_src

* [[https://en.wikipedia.org/wiki/Pumping_lemma_for_regular_languages][–õ–µ–º–º–∞ –æ –Ω–∞–∫–∞—á–∫–µ]] (‚ãÜ‚ãÜ‚ãÜ‚ãÜ)
–ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ ~s~ –º–∞—Ç—á–∏—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–∫–æ–π, –∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –±–æ–ª—å—à–µ, —á–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–∞—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞, —Ç–æ –≤–Ω—É—Ç—Ä–∏ ~s~ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
—Å—É—Ñ—Ñ–∏–∫—Å, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –Ω–µ–≤–æ–∑–æ–±—Ä–∞–Ω–Ω–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å, –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ–∂–µ –±—É–¥–µ—Ç –º–∞—Ç—á–∏—Ç—å—Å—è —Ç–æ–π –∂–µ —Ä–µ–≥—É–ª—è—Ä–∫–æ–π.
TODO

#+begin_src agda2

pumpingConstant : {A : Type ‚Ñì} ‚Üí RegExp A ‚Üí ‚Ñï
pumpingConstant √∏ = 0
pumpingConstant Œµ = 1
pumpingConstant (# _) = 2
pumpingConstant (re‚ÇÅ ‚àô re‚ÇÇ) = pumpingConstant re‚ÇÅ + pumpingConstant re‚ÇÇ
pumpingConstant (re‚ÇÅ ‚à£ re‚ÇÇ) = pumpingConstant re‚ÇÅ + pumpingConstant re‚ÇÇ
pumpingConstant (_ +) = 1

-- pumpingLemma : (s =~ re) ‚Üí
--                (pumpingConstant re ‚â§ length s) ‚Üí
--                Œ£ _ Œª s‚ÇÅ ‚Üí Œ£ _ Œª s‚ÇÇ ‚Üí Œ£ _ Œª s‚ÇÉ ‚Üí (s ‚â° s‚ÇÅ ++ s‚ÇÇ ++ s‚ÇÉ) √ó (¬¨ (s‚ÇÇ ‚â° [])) √ó ((m : ‚Ñï) ‚Üí s‚ÇÅ ++ s‚ÇÇ ++ s‚ÇÉ =~ re)
-- pumpingLemma = {!!}

#+end_src
